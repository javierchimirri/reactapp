[{"C:\\xampp\\htdocs\\crud-react\\src\\index.js":"1","C:\\xampp\\htdocs\\crud-react\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\crud-react\\src\\App.js":"3","C:\\xampp\\htdocs\\crud-react\\src\\firebase.js":"4","C:\\xampp\\htdocs\\crud-react\\src\\components\\Links.js":"5","C:\\xampp\\htdocs\\crud-react\\src\\components\\LinkForm.js":"6"},{"size":574,"mtime":1613591144235,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":370,"mtime":1613660885069,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1613588877613,"results":"11","hashOfConfig":"8"},{"size":2833,"mtime":1613664225655,"results":"12","hashOfConfig":"8"},{"size":3005,"mtime":1613668522001,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"15hpqkl",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\xampp\\htdocs\\crud-react\\src\\index.js",[],["29","30"],"C:\\xampp\\htdocs\\crud-react\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\crud-react\\src\\App.js",[],"C:\\xampp\\htdocs\\crud-react\\src\\firebase.js",[],"C:\\xampp\\htdocs\\crud-react\\src\\components\\Links.js",["31"],"import React, { useEffect, useState } from 'react';\r\nimport {toast} from 'react-toastify';\r\n\r\nimport LinkForm from './LinkForm';\r\n\r\nimport {db} from '../firebase';\r\n\r\nexport const Links = () => {\r\n\r\n    const [links, setLinks] = useState([]);\r\n    const [currentId, setCurrentId] = useState('');\r\n\r\n    const addOrEditLink = async (linkObject) => {\r\n        try {\r\n            if (currentId === '') {\r\n                await db.collection('links').doc().set(linkObject);\r\n                toast('New link added',{\r\n                    type: 'success'\r\n                });\r\n            } else {\r\n                await db.collection('links').doc(currentId).update(linkObject);\r\n                toast('Link updated successfully',{\r\n                    type: 'info'\r\n                });\r\n                setCurrentId('');\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const onDeleteLink = async (id) => {\r\n        if (window.confirm('Are you sure you want to delete this link?')) {\r\n            await db.collection('links').doc(id).delete();\r\n            toast('Link deleted successfully',{\r\n                type: 'error',\r\n                autoClose: 2000,\r\n            });\r\n        }\r\n    };\r\n\r\n    const getLinks = async () => {\r\n        db.collection('links').onSnapshot((querySnapshot) => {\r\n            const docs = [];\r\n            querySnapshot.forEach((doc) => {\r\n                docs.push({...doc.data(), id:doc.id});\r\n            });\r\n            setLinks(docs);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getLinks();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"col-12 p-2\">\r\n                <LinkForm {...{addOrEditLink, currentId, links}}/>   \r\n            </div>\r\n            <div className=\"col-12 p-2\">\r\n                {links.map(link => {\r\n                    return <div className=\"card mb-1\" key={link.id}>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <h4>{link.name}</h4>\r\n                                <div>\r\n                                    <i className=\"material-icons text-danger\" onClick={() => onDeleteLink(link.id)}>close</i>\r\n                                    <i className=\"material-icons\" onClick={() => setCurrentId(link.id)}>create</i>\r\n                                </div>\r\n                            </div>\r\n                            <p>{link.description}</p>\r\n                            <a href={link.url} target=\"_blank\">\r\n                                Go to Website\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Links;","C:\\xampp\\htdocs\\crud-react\\src\\components\\LinkForm.js",["32"],"import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { db } from '../firebase';\r\n\r\nexport const LinkForm = (props) => {\r\n\r\n    const initialStateValues = {\r\n        url: '',\r\n        name: '',\r\n        description: ''\r\n    }\r\n\r\n    const [values, setValues] = useState(initialStateValues)\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target;\r\n        setValues({...values, [name]: value})\r\n    };\r\n\r\n    const validateURL = (str) => {\r\n        return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(str); \r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        if (!validateURL(values.url)) {\r\n            return toast(\"Invalid URL\", {\r\n                type: \"warning\",\r\n                autoClose: 1000,\r\n            })\r\n        }\r\n        props.addOrEditLink(values);\r\n        setValues({...initialStateValues})\r\n    };\r\n\r\n    const getLinkById = async (id) => {\r\n        const doc = await db.collection('links').doc(id).get();\r\n        setValues({...doc.data()});\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.currentId === '') {\r\n            setValues({...initialStateValues});\r\n        } else {\r\n            getLinkById(props.currentId);\r\n        }\r\n    },[props.currentId]);\r\n\r\n    return (\r\n        <form className=\"card card-body\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-text bg-light\">\r\n                    <i className=\"material-icons\">insert_link</i>\r\n                </div>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"https://someurl.com\" name=\"url\" id=\"\" onChange={handleInputChange} value={values.url}/>\r\n            </div>\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-text bg-light\">\r\n                    <i className=\"material-icons\">create</i>\r\n                </div>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Website name\" name=\"name\" id=\"\" onChange={handleInputChange} value={values.name}/>\r\n            </div>\r\n            <div className=\"form-group input-group\">\r\n                <textarea name=\"description\" placeholder=\"Website description\" className=\"form-control\" id=\"\" rows=\"3\" onChange={handleInputChange} value={values.description}></textarea>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">{props.currentId === '' ? 'Save' : 'Update'}</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LinkForm;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":73,"column":29,"nodeType":"39","endLine":73,"endColumn":64},{"ruleId":"40","severity":1,"message":"41","line":48,"column":7,"nodeType":"42","endLine":48,"endColumn":24,"suggestions":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialStateValues'. Either include it or remove the dependency array.","ArrayExpression",["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [initialStateValues, props.currentId]",{"range":"49","text":"50"},[1692,1709],"[initialStateValues, props.currentId]"]